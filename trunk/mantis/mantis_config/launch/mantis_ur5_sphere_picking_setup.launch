<?xml version="1.0" ?>
<launch>
	<!-- input arguments -->
	<arg name="use_chomp" default="true" />
	<arg name="launch_bringup" default="true"/>
	<arg name="sim_only" default="true"/>

	<arg name="sensor_usb_manual_setup" default="false"/>
	<arg name="sensor_usb_bus" default="002"/>
	<arg name="sensor_usb_device" default="004"/>

	<!-- fixed parameters -->
	<arg name="arm_namespace" value="ur5_arm"/>
	<arg name="robot_description" value="$(find xacro)/xacro.py '$(find mantis_config)/urdf/mantis_ur5_arm_workspace.xacro'"/>
	<arg name="sensor_name" value="$(arg arm_namespace)_kinect"/>

	<!-- launching environment configuration -->
	<include file="$(find mantis_config)/launch/environment_setup.launch"/>

	<!-- launching bringup -->
	<include if="$(arg launch_bringup)" file="$(find mantis_config)/launch/mantis_ur5_gripper_bringup.launch">
		<arg name="sim_only" value="$(arg sim_only)"/>
	</include>

	<!-- camera sensor setup (must be placed outside the group namespace) -->
	<remap from="/$(arg sensor_name)/depth/points"
		to="/$(arg arm_namespace)/camera/depth_registered/points"/>
	<include  file="$(find mantis_perception)/launch/mantis_sensor_asus.launch">
		<arg name="arm_prefix" value="$(arg arm_namespace)_"/>
		<arg name="camera_name" value="$(arg sensor_name)"/>
		<arg if="$(arg sensor_usb_manual_setup)" name="device_id" value="$(arg sensor_usb_bus)@$(arg sensor_usb_device)" />
	</include>

	<!-- gripper description (needs to be outside the scope of the namespace)-->
	<rosparam  command="load" 
		file="$(find mantis_ur5_arm_navigation)/config/vacuum_gripper_description_parameters.yaml"/>

	<group ns="$(arg arm_namespace)">

		<!-- planning enviroment parameter setup-->
		<param name="robot_description" command="$(arg robot_description)" />
		<rosparam command="load" ns="robot_description_planning" 
			file="$(find mantis_ur5_arm_navigation)/config/mantis_ur5_planning_description.yaml" />

		<!-- planning environment server start -->
		<include  file="$(find planning_environment)/launch/environment_server.launch">
			<arg name="use_collision_map" value="false"/>
		</include>  

		<!-- path planner -->
		<!-- if chomp was selected -->
		<remap if="$(arg use_chomp)" 
			from="/$(arg arm_namespace)/chomp_planner_longrange/plan_path" 
			to="/$(arg arm_namespace)/path_planning/plan_kinematic_path"/>
		<include if="$(arg use_chomp)"  
			file="$(find mantis_ur5_arm_navigation)/launch/chomp_planning.launch"/>

		<!-- if ompl was selected -->
		<remap unless="$(arg use_chomp)" 
			from="/$(arg arm_namespace)/ompl_planning/plan_kinematic_path" 
			to="/$(arg arm_namespace)/path_planning/plan_kinematic_path"/>
		<include  unless="$(arg use_chomp)" 
			file="$(find mantis_ur5_arm_navigation)/launch/ompl_planning.launch"/>   


		<!-- trajectory filter -->
		<node  pkg="trajectory_filter_server" 
			name="trajectory_filter_server" type="trajectory_filter_server" output="screen">
			<rosparam command="load" file="$(find mantis_ur5_arm_navigation)/config/joint_limits.yaml"/>
			<rosparam unless="$(arg use_chomp)" command="load" 
				file="$(find mantis_ur5_arm_navigation)/config/ompl_filters.yaml"/>
			<rosparam if="$(arg use_chomp)" command="load" 
				file="$(find mantis_ur5_arm_navigation)/config/chomp_filters.yaml"/>
		</node>

		<!-- grasp planner -->
		<include  file="$(find mantis_grasp_planning)/launch/vacuum_gripper_grasp_planner_server.launch"/>

		<!-- segmentation -->
		<include  file="$(find mantis_perception)/launch/tabletop_segmentation.launch">

			<arg name="tabletop_segmentation_points_in" 
				value="/$(arg sensor_name)/depth_registered/points"/>
			<arg name="processing_frame" value="workcell_frame"/>
			<arg name="up_direction" value="1.0"/>
			<arg name="z_filter_min" value="-0.1"/>
			<arg name="z_filter_max" value="0.5"/>
			<arg name="y_filter_min" value="-1.0"/>
			<arg name="y_filter_max" value="0.8"/>
			<arg name="x_filter_min" value="-1.2"/>
			<arg name="x_filter_max" value="-0.6"/>
			<arg name="tabletop_segmentation_clustering_voxel_size" value="0.004" />
		    	<arg name="inlier_threshold" value="300"/>
		    	<arg name="plane_detection_voxel_size" value="0.01"/>
    			<arg name="cluster_distance" value="0.03" />
		    	<arg name="min_cluster_size" value="300"/>
	    		<arg name="flatten_table" value="false"/>
		    	<arg name="table_padding" value="0.02"/>
		</include>
	</group>

</launch>
