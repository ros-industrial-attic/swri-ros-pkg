-- Software License Agreement (BSD License)
--
-- Copyright (c) 2012, TU Delft Robotics Institute
-- All rights reserved.
--
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions
-- are met:
--
--  * Redistributions of source code must retain the above copyright
--    notice, this list of conditions and the following disclaimer.
--  * Redistributions in binary form must reproduce the above
--    copyright notice, this list of conditions and the following
--    disclaimer in the documentation and/or other materials provided
--    with the distribution.
--  * Neither the name of the TU Delft Robotics Institute nor the names 
--    of its contributors may be used to endorse or promote products 
--    derived from this software without specific prior written 
--    permission.
--
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
-- FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-- COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-- INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-- BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-- LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
-- CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-- LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
-- ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-- POSSIBILITY OF SUCH DAMAGE.


PROGRAM libind_log
--------------------------------------------------------------------------------
-- 
-- Simple logging routines
-- 
-- TODO:
--   - use mutex / semaphore in 'log_clear' with init bool
-- 
-- author: G.A. vd. Hoorn
-- 
--------------------------------------------------------------------------------
%NOLOCKGROUP
%NOPAUSE= COMMAND + TPENABLE + ERROR
%COMMENT = 'ROS Ind Log'




--------------------------------------------------------------------------------
-- 
-- local types & constants
-- 
--------------------------------------------------------------------------------
const
    -- from KAREL Reference Manual, MARRC75KR07091E Rev C, table D-2
    BG_DEFAULT = 127
    BG_BLACK = 48

    FG_DEFAULT = 127
    FG_RED = 49
    FG_GREEN = 50
    FG_YELLOW = 51

    -- copied from rosconsole.cpp
    ROS_WARN = FG_YELLOW
    ROS_ERR = FG_RED
    ROS_DEBUG = FG_GREEN




--------------------------------------------------------------------------------
-- 
-- local routine prototypes
-- 
--------------------------------------------------------------------------------
%INCLUDE libind_log_h




--------------------------------------------------------------------------------
-- 
-- Empty body
-- 
--------------------------------------------------------------------------------
BEGIN
END libind_log




--------------------------------------------------------------------------------
-- 
-- Clear and force the USER menu screen
-- 
--------------------------------------------------------------------------------
ROUTINE log_clear
BEGIN
    WRITE(CHR(128), CR)
    FORCE_SPMENU(TP_PANEL, SPI_TPUSER, 1)
END log_clear




--------------------------------------------------------------------------------
-- 
-- Write INFO level string to display
-- 
--------------------------------------------------------------------------------
ROUTINE log_info
BEGIN
    WRITE TPDISPLAY('INFO: ', s, CR)
END log_info




--------------------------------------------------------------------------------
-- 
-- Write INFO level string and 1 integer parameter to display
-- 
--------------------------------------------------------------------------------
ROUTINE log_info_a
BEGIN
    WRITE TPDISPLAY('INFO: ', s, a, CR)
END log_info_a




--------------------------------------------------------------------------------
-- 
-- Write WARN level string to display 51
-- 
--------------------------------------------------------------------------------
ROUTINE log_warn
BEGIN
    WRITE TPDISPLAY( &
        CHR(156), CHR(BG_BLACK), &
        CHR(155), CHR(ROS_WARN), &
        'WARN: ', s, &
        CHR(156), CHR(BG_DEFAULT), &
        CHR(155), CHR(FG_DEFAULT), &
        CR)
END log_warn




--------------------------------------------------------------------------------
-- 
-- Write WARN level string and 1 integer parameter to display
-- 
--------------------------------------------------------------------------------
ROUTINE log_warn_a
BEGIN
    WRITE TPDISPLAY( &
        CHR(155), CHR(ROS_WARN), &
        'WARN: ', s, a, &
        CHR(155), CHR(FG_DEFAULT), &
        CR)
END log_warn_a




--------------------------------------------------------------------------------
-- 
-- Write ERROR level string to display
-- 
--------------------------------------------------------------------------------
ROUTINE log_error
BEGIN
    WRITE TPDISPLAY( &
        CHR(155), CHR(ROS_ERR), &
        'ERR : ', s, &
        CHR(155), CHR(FG_DEFAULT), &
        CR)
END log_error




--------------------------------------------------------------------------------
-- 
-- Write ERROR level string and 1 integer parameter to display
-- 
--------------------------------------------------------------------------------
ROUTINE log_error_a
BEGIN
    WRITE TPDISPLAY( &
        CHR(155), CHR(ROS_ERR), &
        'ERR : ', s, a, &
        CHR(155), CHR(FG_DEFAULT), 
        CR)
END log_error_a
