<launch>
 <!-- set stereo to true for narrow stereo, false for kinect -->
 <arg name="stereo" default="false" />

 <!-- client for object database running on remote server at Willow Garage -->
 <!-- NON-ZERO CHANCE IT WORKS IN TRUNK RIGHT NOW -->
 <include file="$(find household_objects_database)/launch/objects_database_remote_client.launch"/>

 <!-- alternative option: database server running on a local machine -->
<!--
 <param name="/household_objects_database/database_host" value="wgs36.willowgarage.com"/>
 <param name="/household_objects_database/database_port" value="5432"/>
 <param name="/household_objects_database/database_user" value="willow"/>
 <param name="/household_objects_database/database_pass" value="willow"/>
 <param name="/household_objects_database/database_name" value="household_objects"/>
 <node pkg="household_objects_database" name="objects_database_node" type="objects_database_node" respawn="true" output="screen"/>
-->

 <!-- tabletop collision map processing -->
 <node pkg="tabletop_collision_map_processing" name="tabletop_collision_map_processing"
       type="tabletop_collision_map_processing_node" respawn="false" output="screen"/>
 <param name="tabletop_collision_map_processing/get_model_mesh_srv" value="/objects_database_node/get_model_mesh" />
 <param name="tabletop_collision_map_processing/static_map_cloud_name" value="full_cloud_filtered" />

 <!-- tabletop segmentation and object recognition -->
 <include file="$(find tabletop_object_detector)/launch/tabletop_complete.launch">
     <arg unless="$(arg stereo)" name="tabletop_segmentation_points_input" value="camera/depth/points"/>
     <arg if="$(arg stereo)" name="tabletop_segmentation_points_input" value="narrow_stereo_textured/points2"/>
 </include>

  <!-- cluster bounding box finder--> 
  <node name="cluster_bounding_box_finder" pkg="object_manipulator" cwd="node" 
   type="cluster_bounding_box_finder_server.py" output="screen" respawn="false" >
	<param name="z_up_frame" value="/base_link" />
  </node>

</launch>

